# raw load. Lots to optimize
#> dim(dataset)
#[1] 902297     37

> sapply(dataset, class)
   STATE__   BGN_DATE   BGN_TIME  TIME_ZONE     COUNTY COUNTYNAME      STATE     EVTYPE  BGN_RANGE    BGN_AZI BGN_LOCATI   END_DATE   END_TIME COUNTY_END COUNTYENDN 
 "numeric"   "factor"   "factor"   "factor"  "numeric"   "factor"   "factor"   "factor"  "numeric"   "factor"   "factor"   "factor"   "factor"  "numeric"  "logical" 
 END_RANGE    END_AZI END_LOCATI     LENGTH      WIDTH          F        MAG FATALITIES   INJURIES    PROPDMG PROPDMGEXP    CROPDMG CROPDMGEXP        WFO STATEOFFIC 
 "numeric"   "factor"   "factor"  "numeric"  "numeric"  "integer"  "numeric"  "numeric"  "numeric"  "numeric"   "factor"  "numeric"   "factor"   "factor"   "factor" 
 ZONENAMES   LATITUDE  LONGITUDE LATITUDE_E LONGITUDE_    REMARKS     REFNUM 
  "factor"  "numeric"  "numeric"  "numeric"  "numeric"   "factor"  "numeric" 


types <- c(numeric,factor,factor,factor,numeric,factor,factor,factor,numeric,factor,factor,factor,factor,numeric,logical,numeric,factor,factor,numeric,numeric,integer,numeric,numeric,numeric,numeric,factor,numeric,factor,factor,factor,factor,numeric,numeric,numeric,numeric,factor,numeric)

dataset <- read.csv(bzfile("repdata_data_StormData.csv.bz2"), nrows=900000, na.strings="")

s <- split(dataset$FATALITIES, dataset$EVTYPE)

fat.evtype <- sapply(s, sum)

attributes(fat.evtype)[[1]][which.max(fat.evtype)]
fat.evtype[which.max(fat.evtype)]


“K” for thousands, “M” for millions, and “B” for billions.

PROPDMG PROPDMGEXP CROPDMG CROPDMGEXP

fexp <- function(val, exp) {
     exp <- tolower(exp)
     exp.num <- as.numeric(exp)
     if (is.na(exp)) {
        val
     } else if (!is.na(exp.num)) {
        val*(10^exp.num)
     }
     else {
          switch(exp, k={val*1e3}, h={val*1e2}, m={val*1e6}, b={val*1e9}, '+'={val*10}, '-'={val}, {val})
     }
}


vectorized: check
http://stackoverflow.com/questions/562

6296/efficient-apply-or-mapply-for-multiple-matrix-arguments-by-row

http://seananderson.ca/2014/09/13/dplyr-intro.html
http://cran.r-project.org/web/packages/dplyr/vignettes/introduction.html

install.packages("dplyr")
tail(dataset) %>% filter(PROPDMGEXP == "B")

----

 [1] "STATE__"    "BGN_DATE"   "BGN_TIME"   "TIME_ZONE"  "COUNTY"     "COUNTYNAME" "STATE"      "EVTYPE"     "BGN_RANGE"  "BGN_AZI"    "BGN_LOCATI" "END_DATE"   "END_TIME"  
[14] "COUNTY_END" "COUNTYENDN" "END_RANGE"  "END_AZI"    "END_LOCATI" "LENGTH"     "WIDTH"      "F"          "MAG"        "FATALITIES" "INJURIES"   "PROPDMG"    "PROPDMGEXP"
[27] "CROPDMG"    "CROPDMGEXP" "WFO"        "STATEOFFIC" "ZONENAMES"  "LATITUDE"   "LONGITUDE"  "LATITUDE_E" "LONGITUDE_" "REMARKS"    "REFNUM"    


require(lubridate)

1.Across the United States, which types of events (as indicated in the EVTYPE variable) are most harmful with respect to population health?

library(dplyr)

dataset %>% arrange(desc(FATALITIES, INJURIES)) %>%  head(10) 


2.Across the United States, which types of events have the greatest economic consequences?

--

simplify levels:

> y$EVTYPE <- factor(y$EVTYPE)
> levels(y$EVTYPE)


dataset.recent$YEAR<-format(dataset.recent$BGN_DATE.V, "%Y")
totals <- dataset.recent %>% select(YEAR, EVCLASS, FATALITIES, TOTALDMG.V) %>% arrange(YEAR) %>% group_by(EVCLASS,YEAR) %>% summarise(TOT.FATAL = sum(FATALITIES), TOT.DMG=sum(TOTALDMG.V))


--

    
Niceprint:
http://stackoverflow.com/questions/27648782/numbers-formatted-in-r-to-look-better-thousands-separators-etc-are-no-longer

---
classes of events

FLOOD
STORM
HURRICANE
TORNADO
HAIL
HEAT
SNOW

